// <auto-generated />
using System;
using EventPlanner.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace EventPlanner.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250213100207_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "9.0.1");

            modelBuilder.Entity("EventPlanner.Models.Event", b =>
                {
                    b.Property<int>("EventID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("EventDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("EventName")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("EventPlace")
                        .HasColumnType("TEXT");

                    b.HasKey("EventID");

                    b.ToTable("Events");
                });

            modelBuilder.Entity("EventPlanner.Models.EventTask", b =>
                {
                    b.Property<int>("EventTaskID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("AssignedTo")
                        .HasColumnType("TEXT");

                    b.Property<int?>("EventID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("GuestID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("TaskDescription")
                        .HasColumnType("TEXT");

                    b.Property<string>("TaskStatus")
                        .HasColumnType("TEXT");

                    b.HasKey("EventTaskID");

                    b.HasIndex("EventID");

                    b.HasIndex("GuestID");

                    b.ToTable("EventTasks");
                });

            modelBuilder.Entity("EventPlanner.Models.Guest", b =>
                {
                    b.Property<int>("GuestID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Email")
                        .HasColumnType("TEXT");

                    b.Property<int?>("EventID")
                        .HasColumnType("INTEGER");

                    b.Property<string>("GuestName")
                        .HasColumnType("TEXT");

                    b.Property<string>("RSVPStatus")
                        .HasColumnType("TEXT");

                    b.HasKey("GuestID");

                    b.HasIndex("EventID");

                    b.ToTable("Guests");
                });

            modelBuilder.Entity("EventPlanner.Models.Rating", b =>
                {
                    b.Property<int>("RatingID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Comments")
                        .HasColumnType("TEXT");

                    b.Property<int?>("EventID")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("RatingValue")
                        .HasColumnType("INTEGER");

                    b.HasKey("RatingID");

                    b.HasIndex("EventID");

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("EventPlanner.Models.EventTask", b =>
                {
                    b.HasOne("EventPlanner.Models.Event", "Event")
                        .WithMany("EventTasks")
                        .HasForeignKey("EventID");

                    b.HasOne("EventPlanner.Models.Guest", "Guest")
                        .WithMany()
                        .HasForeignKey("GuestID");

                    b.Navigation("Event");

                    b.Navigation("Guest");
                });

            modelBuilder.Entity("EventPlanner.Models.Guest", b =>
                {
                    b.HasOne("EventPlanner.Models.Event", "Event")
                        .WithMany("Guests")
                        .HasForeignKey("EventID");

                    b.Navigation("Event");
                });

            modelBuilder.Entity("EventPlanner.Models.Rating", b =>
                {
                    b.HasOne("EventPlanner.Models.Event", "Event")
                        .WithMany("Ratings")
                        .HasForeignKey("EventID");

                    b.Navigation("Event");
                });

            modelBuilder.Entity("EventPlanner.Models.Event", b =>
                {
                    b.Navigation("EventTasks");

                    b.Navigation("Guests");

                    b.Navigation("Ratings");
                });
#pragma warning restore 612, 618
        }
    }
}
