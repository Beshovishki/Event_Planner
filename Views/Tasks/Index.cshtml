@model IEnumerable<EventPlanner.Models.EventTask>

@{
    ViewData["Title"] = "Задачи";
}

<h1>Задачи</h1>

<p>
    <a href="@Url.Action("Create", "Tasks")" class="btn btn-primary">Добавяне на задача</a>
</p>

<table class="table">
    <thead>
        <tr>
            <th>Описание на задачата</th>
            <th>Отговорник</th>
			<th>Събитие</th>
            <th>Статус</th>
            <th style="width: 10px"></th>
            <th></th>
            
        </tr>
    </thead>
    <tbody>
        @foreach (var task in Model)
        {
            <tr>
                <td>
                    @{
                        var shortTaskDescription = task.TaskDescription.Length > 20 ? task.TaskDescription.Substring(0, 20) + "..." : task.TaskDescription;
                    }
                    <div id="taskDescription-@task.EventTaskID" class="taskDescription-short">
                        @shortTaskDescription
                    </div>
                    <div id="full-taskDescription-@task.EventTaskID" class="taskDescription-full" style="display:none;">
                        @task.TaskDescription
                    </div>
                    </td>
                <td>
                    @{
                        var shortAssignedTo = task.AssignedTo.Length > 20 ? task.AssignedTo.Substring(0, 20) + "..." : task.AssignedTo;
                    }
                    <div id="taskAssignedTo-@task.EventTaskID" class="taskAssignedTo-short">
                        @shortAssignedTo
                    </div>
                    <div id="full-taskAssignedTo-@task.EventTaskID" class="taskAssignedTo-full" style="display:none;">
                        @task.AssignedTo
                    </div>
                    </td>
                <td>
                    @{
                        var shortEventName = task.Event.EventName.Length > 20 ? task.Event.EventName.Substring(0, 20) + "..." : task.Event.EventName;
                    }
                    <div id="taskEventName-@task.EventTaskID" class="taskEventName-short">
                        @shortEventName
                    </div>
                    <div id="full-taskEventName-@task.EventTaskID" class="taskEventName-full" style="display:none;">
                        @task.Event.EventName
                    </div>
                    </td>
                <td>
                    @switch (task.TaskStatus)
                    {
                        case "Not Started":
                            <text>Изчаква</text>
                            break;
                        case "In Progress":
                            <text>В процес</text>
                            break;
                        case "Completed":
                            <text>Завършено</text>
                            break;
                        default:
                            <text>@task.TaskStatus</text>
                            break;
                    }
                </td>
                <td style="width:50px">
                    @if (task.TaskDescription.Length > 20 || task.AssignedTo.Length > 20 || task.Event.EventName.Length > 20)
                    {
                        <button class="btn btn-primary" onclick="toggleText(this, @task.EventTaskID)">Преглед</button>
                    }

                </td>
                <td>
                    <div class="d-flex gap-2">
                    <a href="@Url.Action("Edit", "Tasks", new { id = task.EventTaskID })" class="btn btn-warning" style="margin-right: 10px;">Редактирай</a>
                    <a href="@Url.Action("Delete", "Tasks", new { id = task.EventTaskID  })" class="btn btn-danger">Изтрий</a>
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>
<script>
        function toggleText(button, eventTaskId) {
        var fullTaskDescription = document.getElementById("full-taskDescription-" + eventTaskId);
        var taskDescription = document.getElementById("taskDescription-" + eventTaskId);
        var fullAssignedTo = document.getElementById("full-taskAssignedTo-" + eventTaskId);
        var taskAssignedTo = document.getElementById("taskAssignedTo-" + eventTaskId);
        var fullEventName = document.getElementById("full-taskEventName-" + eventTaskId);
        var taskEventName = document.getElementById("taskEventName-" + eventTaskId);

        if (!fullTaskDescription || !taskDescription || !fullAssignedTo || !taskAssignedTo) {
            console.error("Missing elements for eventTaskId: " + eventTaskId);
            return;
        }

        var isHidden = fullTaskDescription.style.display === "none";
        taskDescription.style.display = isHidden ? "none" : "block";
        fullTaskDescription.style.display = isHidden ? "block" : "none";
        fullAssignedTo.style.display === "none";
        taskAssignedTo.style.display = isHidden ? "none" : "block";
        fullAssignedTo.style.display = isHidden ? "block" : "none";
        fullEventName.style.display === "none";
        taskEventName.style.display = isHidden ? "none" : "block";
        fullEventName.style.display = isHidden ? "block" : "none";

        // Промяна на текста на бутона
        button.innerText = isHidden ? "Затвори" : "Преглед";
    }
</script>
